/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
       // flavor = "tap-preferred";
       // tapping_term_ms = <200>;
};

/ {
        behaviors {        
                ht: hold_tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOLD_TAP";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;
                        quick-tap-ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };   
        };

        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };

        combos {
                compatible = "zmk,combos";
                combo_esc {
                        timeout-ms = <50>;
                        key-positions = <1 2>;
                        bindings = <&gresc>;
                };
                combo_bspc {
                        timeout-ms = <50>;
                        key-positions = <9 10>;
                        bindings = <&kp BSPC>;
                };
                combo_tab {
                        timeout-ms = <50>;
                        key-positions = <12 13>;
                        bindings = <&kp TAB>;
                };
                combo_sqt {
                        timeout-ms = <50>;
                        key-positions = <21 22>;
                        bindings = <&kp SQT>;
                };
                combo_qmark {
                        timeout-ms = <50>;
                        key-positions = <33 34>;
                        bindings = <&kp QMARK>;
                };    
  
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP|
// |  TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '  |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC |
//                    | GUI | CMD | ENT |   | SPC | TRI  |  PP |
                        bindings = <
   &kp ESC         &kp Q        &kp W      &kp E      &kp R        &kp T       &kp Y       &kp U        &kp I     &kp O   &kp P           &kp BSPC
   &ht LCTRL TAB   &ht LCTRL A  &ht LALT S &ht LGUI D &ht RSHIFT F &kp G       &kp H       &ht RSHIFT J &kp K     &kp L   &kp SEMI        &kp SQT
   &mt LSHIFT LPAR &mt LSHIFT Z &kp X      &kp C      &kp V        &kp B       &kp N       &kp M        &kp COMMA &kp DOT &mt RSHIFT FSLH &mt RSHIFT RPAR
                                           &kp LALT   &kp LGUI     &lt 1 RET   &lt 2 SPACE &kp T        &kp C_PP
                        >;
                };
                left_layer {
// -----------------------------------------------------------------------------------------
// |GRAVE|     |     |     |     |     |   |     |     |     |     | DEL |     |
// | CAPS|  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |     |
// |     |     |Vol -|Vol +| PLAY|     |   |     |     |  {  |  }  |  ?  |     |
//                   |     |     |     |   |     |     |     |
                        bindings = <
   &kp GRAVE &trans   &trans       &trans       &trans   &trans      &trans    &kp UNDER &kp PLUS        &kp PIPE &kp DEL   &trans
   &kp CAPS  &kp EXCL &kp AT       &kp HASH     &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR  &trans
   &trans    &trans   &kp C_VOL_DN &kp C_VOL_UP &kp C_PP &trans      &trans    &trans    &kp LBRC        &kp RBRC &kp QMARK &trans
                                   &trans       &trans   &trans      &trans    &trans    &trans
                        >;
                };

                right_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |     |     |     |     |     |   |     |  -  |  =  |  \  | BKSP|     |
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  `  |
// |      |     |     |     |     |     |   |  _  |     |  [  |  ]  |  ?  |     |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &kp TAB &trans &trans &trans &trans &trans     &trans    &kp MINUS &kp EQUAL &kp BSLH &kp BSPC  &trans
   &trans  &kp N1 &kp N2 &kp N3 &kp N4 &kp N5     &kp N6    &kp N7    &kp N8    &kp N9   &kp N0    &kp GRAVE
   &trans  &trans &trans &trans &trans &trans     &kp UNDER &kp PLUS  &kp LBKT  &kp RBKT &kp QMARK &trans
                         &trans &trans &kp BSPC   &trans    &trans    &trans
                        >;
                };

                tri_layer {
// -----------------------------------------------------------------------------------------
// |     |     |  UP |     | HOME|PG UP|   | SCRS|     |     |     |     |     |
// |     | LEFT| DOWN|RIGHT| END |PG DN|   | LEFT| DOWN|  UP |RIGHT|     |     |
// |     |BTCLR| BT1 | BT2 | BT3 | BT4 |   |     |TMSMA|TMSMV|TMSFS|     |     | 
//                   |     |     |     |   |     |     |     |
                        bindings = <
   &trans &trans     &kp UP       &trans       &kp HOME     &kp PG_UP      &kp LS(LG(N4)) &trans        &trans        &trans        &trans &trans
   &trans &kp LEFT   &kp DOWN     &kp RIGHT    &kp END      &kp PG_DN      &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &trans &trans
   &trans &bt BT_CLR &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans        &kp LS(LG(M)) &kp LS(LG(O)) &kp LS(LG(F)) &trans &trans
                                  &trans       &trans       &trans         &trans        &trans        &trans
                        >;
                };
        };
};
